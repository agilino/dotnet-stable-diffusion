name: dockercompose14414702448974459090
services:
  backend-api:
    build:
      context: D:\Agilino\Projects\dotnet-stable-diffusion
      dockerfile: backend-api/Dockerfile
    depends_on:
      image-db:
        condition: service_started
      redis:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    image: backendapi
    networks:
      image-network: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
  frontend-web:
    build:
      context: D:\Agilino\Projects\dotnet-stable-diffusion
      dockerfile: frontend-web/Dockerfile
    depends_on:
      image-db:
        condition: service_started
      redis:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
    image: frontendweb
    networks:
      image-network: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\ASUS\.aspnet\https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\ASUS\.microsoft\usersecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
  image-db:
    container_name: image-db
    environment:
      POSTGRES_DB: image
      POSTGRES_PASSWORD: "123456"
      POSTGRES_USER: image
    image: postgres:14
    networks:
      image-network: null
    ports:
    - mode: ingress
      target: 5432
      published: "5005"
      protocol: tcp
    restart: unless-stopped
  redis:
    image: redis
    networks:
      image-network: null
    ports:
    - mode: ingress
      target: 6379
      published: "6379"
      protocol: tcp
networks:
  image-network:
    name: dockercompose14414702448974459090_image-network
    driver: bridge